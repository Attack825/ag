name: Go CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21.x']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Get dependencies
        run: go mod download

      - name: Install dependencies
        run: go get .

      - name: Build
        run: go build -v ./...

      - name: Test with the GO CLI
        run: go test

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.go }}
          path: coverage.txt


  release:
    needs: build
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.x'

    - name: Build binaries
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/ag-linux-amd64
        GOOS=darwin GOARCH=amd64 go build -o dist/ag-darwin-amd64
        GOOS=windows GOARCH=amd64 go build -o dist/ag-windows-amd64.exe

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: dist